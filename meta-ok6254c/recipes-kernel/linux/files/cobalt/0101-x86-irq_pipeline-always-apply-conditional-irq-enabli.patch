From 3ed30e6cbd70321af77300fcdc7827a2f3fea884 Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Wed, 24 Mar 2021 12:02:30 +0100
Subject: [PATCH 101/179] x86: irq_pipeline: always apply conditional irq
 enabling

Signed-off-by: Philippe Gerum <rpm@xenomai.org>
---
 arch/x86/mm/fault.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c
index 282772a60..44c0a0517 100644
--- a/arch/x86/mm/fault.c
+++ b/arch/x86/mm/fault.c
@@ -18,6 +18,7 @@
 #include <linux/uaccess.h>		/* faulthandler_disabled()	*/
 #include <linux/efi.h>			/* efi_recover_from_page_fault()*/
 #include <linux/mm_types.h>
+#include <linux/irqstage.h>
 
 #include <asm/cpufeature.h>		/* boot_cpu_has, ...		*/
 #include <asm/traps.h>			/* dotraplinkage, ...		*/
@@ -798,7 +799,7 @@ static bool is_vsyscall_vaddr(unsigned long vaddr)
 	return unlikely((vaddr & PAGE_MASK) == VSYSCALL_ADDR);
 }
 
-#ifdef CONFIG_DOVETAIL
+#ifdef CONFIG_IRQ_PIPELINE
 
 static inline void cond_reenable_irqs_user(void)
 {
@@ -826,7 +827,7 @@ static inline void cond_disable_irqs(void)
 		stall_inband_nocheck();
 }
 
-#else  /* !CONFIG_DOVETAIL */
+#else  /* !CONFIG_IRQ_PIPELINE */
 
 static inline void cond_reenable_irqs_user(void)
 {
@@ -842,10 +843,10 @@ static inline void cond_reenable_irqs_kernel(irqentry_state_t state,
 
 static inline void cond_disable_irqs(void)
 {
-	local_irq_disable_full();
+	local_irq_disable();
 }
 
-#endif  /* !CONFIG_DOVETAIL */
+#endif  /* !CONFIG_IRQ_PIPELINE */
 
 static void
 __bad_area_nosemaphore(struct pt_regs *regs, unsigned long error_code,
-- 
2.38.1

