From 9587fc207c29b27b13bcec9f0930bca8e7100dee Mon Sep 17 00:00:00 2001
From: Philippe Gerum <rpm@xenomai.org>
Date: Wed, 4 Aug 2021 18:56:13 +0200
Subject: [PATCH 133/179] arm64: irq_pipeline: fix unbalanced RCU entry/exit on
 fault

We may switch in-band as a result of handling a trap. If we were
running out-of-band on kernel entry, we must not perform the RCU exit
upon leaving the exception since we did not enter RCU in the first
place.

Signed-off-by: Philippe Gerum <rpm@xenomai.org>
---
 arch/arm64/kernel/entry-common.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/kernel/entry-common.c b/arch/arm64/kernel/entry-common.c
index 0df59c02d..0d9fe3d59 100644
--- a/arch/arm64/kernel/entry-common.c
+++ b/arch/arm64/kernel/entry-common.c
@@ -43,9 +43,17 @@ static void noinstr __enter_from_kernel_mode(struct pt_regs *regs)
 static void noinstr enter_from_kernel_mode(struct pt_regs *regs)
 {
 #ifdef CONFIG_IRQ_PIPELINE
+	/*
+	 * CAUTION: we may switch in-band as a result of handling a
+	 * trap, so if we are running out-of-band, we must make sure
+	 * not to perform the RCU exit since we did not enter it in
+	 * the first place.
+	 */
 	regs->oob_on_entry = running_oob();
-	if (regs->oob_on_entry)
+	if (regs->oob_on_entry) {
+		regs->exit_rcu = false;
 		return;
+	}
 
 	/*
 	 * We trapped from kernel space running in-band, we need to
-- 
2.38.1

